//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from QueryFiltering.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IQueryFilteringListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class QueryFilteringBaseListener : IQueryFilteringListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery([NotNull] QueryFilteringParser.QueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery([NotNull] QueryFilteringParser.QueryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.queryParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryParameter([NotNull] QueryFilteringParser.QueryParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.queryParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryParameter([NotNull] QueryFilteringParser.QueryParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.top"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTop([NotNull] QueryFilteringParser.TopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.top"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTop([NotNull] QueryFilteringParser.TopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.skip"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkip([NotNull] QueryFilteringParser.SkipContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.skip"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkip([NotNull] QueryFilteringParser.SkipContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilter([NotNull] QueryFilteringParser.FilterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilter([NotNull] QueryFilteringParser.FilterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.orderBy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderBy([NotNull] QueryFilteringParser.OrderByContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.orderBy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderBy([NotNull] QueryFilteringParser.OrderByContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.filterExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilterExpression([NotNull] QueryFilteringParser.FilterExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.filterExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilterExpression([NotNull] QueryFilteringParser.FilterExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.orderByExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderByExpression([NotNull] QueryFilteringParser.OrderByExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.orderByExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderByExpression([NotNull] QueryFilteringParser.OrderByExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] QueryFilteringParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] QueryFilteringParser.AtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExpression([NotNull] QueryFilteringParser.BoolExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExpression([NotNull] QueryFilteringParser.BoolExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperty([NotNull] QueryFilteringParser.PropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperty([NotNull] QueryFilteringParser.PropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.orderProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderProperty([NotNull] QueryFilteringParser.OrderPropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.orderProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderProperty([NotNull] QueryFilteringParser.OrderPropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] QueryFilteringParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] QueryFilteringParser.ConstantContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
