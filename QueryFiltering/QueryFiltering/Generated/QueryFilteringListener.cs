//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from QueryFiltering.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="QueryFilteringParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IQueryFilteringListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery([NotNull] QueryFilteringParser.QueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery([NotNull] QueryFilteringParser.QueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.queryParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryParameter([NotNull] QueryFilteringParser.QueryParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.queryParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryParameter([NotNull] QueryFilteringParser.QueryParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.top"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTop([NotNull] QueryFilteringParser.TopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.top"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTop([NotNull] QueryFilteringParser.TopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.skip"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSkip([NotNull] QueryFilteringParser.SkipContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.skip"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSkip([NotNull] QueryFilteringParser.SkipContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilter([NotNull] QueryFilteringParser.FilterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.filter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilter([NotNull] QueryFilteringParser.FilterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.orderBy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderBy([NotNull] QueryFilteringParser.OrderByContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.orderBy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderBy([NotNull] QueryFilteringParser.OrderByContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.filterExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterExpression([NotNull] QueryFilteringParser.FilterExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.filterExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterExpression([NotNull] QueryFilteringParser.FilterExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.orderByExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderByExpression([NotNull] QueryFilteringParser.OrderByExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.orderByExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderByExpression([NotNull] QueryFilteringParser.OrderByExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] QueryFilteringParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] QueryFilteringParser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExpression([NotNull] QueryFilteringParser.BoolExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExpression([NotNull] QueryFilteringParser.BoolExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProperty([NotNull] QueryFilteringParser.PropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProperty([NotNull] QueryFilteringParser.PropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.orderByProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderByProperty([NotNull] QueryFilteringParser.OrderByPropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.orderByProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderByProperty([NotNull] QueryFilteringParser.OrderByPropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryFilteringParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] QueryFilteringParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryFilteringParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] QueryFilteringParser.ConstantContext context);
}
